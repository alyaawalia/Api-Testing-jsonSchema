{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-03T04:10:52.379Z",
    "end": "2024-06-03T04:10:53.883Z",
    "duration": 1504,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2c6c2c92-5005-4295-8945-656f09d0b8fe",
      "title": "",
      "fullFile": "C:\\Users\\AlyaAwaliaA\\Documents\\Bootcamp Prosigmaka\\jsonSchema\\Test\\ApiTesting.spec.js",
      "file": "\\Test\\ApiTesting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Post Api Todos/Add",
          "fullTitle": "Post Api Todos/Add",
          "timedOut": false,
          "duration": 756,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const newData = { \n    todo: 'New Todo Alya Awalia', \n    userId: 8\n}\ntry {\nconst res = await axios.post('https://dummyjson.com/todos/add', newData)\n    \n    expect(res.status).to.equal(200)\n    expect(res.data).to.be.jsonSchema(PostSchema)\n    expect(res.data).to.equal(newData)\n} catch (error) { //AxiosError: Request failed with status code 400\n    if (error.response && error.response.status === 400) {\n        console.error('Permintaan tidak valid:', error.response.data)\n    throw error\n    }\n}",
          "err": {},
          "uuid": "ab004ada-9174-4848-ba26-62a47791aebe",
          "parentUUID": "2c6c2c92-5005-4295-8945-656f09d0b8fe",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Put Api Todos/1",
          "fullTitle": "Put Api Todos/1",
          "timedOut": false,
          "duration": 296,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const updateData = { \n    todo: 'Updated Todo Alya Awalia', \n    completed: true,\n    //id: 4\n}\ntry {\nconst res = await axios.put('https://dummyjson.com/todos/1', updateData)\nexpect(res.status).to.equal(200)\nexpect(res.data).to.be.jsonSchema(PutSchema)\n//expect(res.data.todo).to.equal(updateData.todo)\nexpect(res.data).to.equal(updateData.updateData)\n\n    } catch (error) { //AxiosError: Request failed with status code 404\nif (error.response && error.response.status === 404) {\n    console.error('Data Tidak Ditemukan:', error.response.data)\nthrow error\n}\n    }",
          "err": {},
          "uuid": "38e2b95d-a522-4a8e-8b66-0a211b3e2868",
          "parentUUID": "2c6c2c92-5005-4295-8945-656f09d0b8fe",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Delete Api Todos/1",
          "fullTitle": "Delete Api Todos/1",
          "timedOut": false,
          "duration": 188,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const res = await axios.delete('https://dummyjson.com/todos/1')\nexpect(res.status).to.equal(200)\nexpect(res.data).to.be.jsonSchema(Deleteschema)",
          "err": {},
          "uuid": "de924bfa-3255-4760-9efc-85b614229d82",
          "parentUUID": "2c6c2c92-5005-4295-8945-656f09d0b8fe",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [
        {
          "uuid": "0f15b4da-01f0-4803-bc30-edcff5fa0c4f",
          "title": "Api Testing jsonSchema mochawesome",
          "fullFile": "C:\\Users\\AlyaAwaliaA\\Documents\\Bootcamp Prosigmaka\\jsonSchema\\Test\\ApiTesting.spec.js",
          "file": "\\Test\\ApiTesting.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Api Todos/1",
              "fullTitle": "Api Testing jsonSchema mochawesome Get Api Todos/1",
              "timedOut": false,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get('https://dummyjson.com/todos/1')\nexpect(res.status).to.equal(200)\nexpect(res.data).to.be.jsonSchema(GetSchema)",
              "err": {},
              "uuid": "4dca133b-ea16-4fcf-ab69-ac3169152b33",
              "parentUUID": "0f15b4da-01f0-4803-bc30-edcff5fa0c4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4dca133b-ea16-4fcf-ab69-ac3169152b33"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 191,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [
        "ab004ada-9174-4848-ba26-62a47791aebe",
        "38e2b95d-a522-4a8e-8b66-0a211b3e2868",
        "de924bfa-3255-4760-9efc-85b614229d82"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 1240,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}